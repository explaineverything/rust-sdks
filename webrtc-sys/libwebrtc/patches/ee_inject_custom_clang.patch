diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index 53db095..384ec1d 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -826,7 +826,10 @@ config("compiler") {
   #   lldb doesn't have the needed changes yet.
   # TODO(crbug.com/1379070): Remove if the upstream default ever changes.
   if (is_clang && !is_nacl && !is_win && !is_apple) {
-    cflags_cc += [ "-gsimple-template-names" ]
+    #[ee] ee_inject_custom_clang: remove option, Clang 12 does not support it, supported from 14
+    # see: https://releases.llvm.org/12.0.0/tools/clang/docs/ClangCommandLineReference.html#debug-information-flags
+    # see: https://releases.llvm.org/14.0.0/tools/clang/docs/ClangCommandLineReference.html#debug-information-flags
+    #cflags_cc += [ "-gsimple-template-names" ]
   }

   # MLGO specific flags. These flags enable an ML-based inliner trained on
@@ -1359,7 +1362,8 @@ config("compiler_deterministic") {
     # different build directory like "out/feature_a" and "out/feature_b" if
     # we build same files with same compile flag.
     # Other paths are already given in relative, no need to normalize them.
-    if (is_nacl) {
+    #[ee] ee_inject_custom_clang: remove option, Clang 12 does not support it
+    if (is_nacl || is_linux) {
       # TODO(https://crbug.com/1231236): Use -ffile-compilation-dir= here.
       cflags += [
         "-Xclang",
@@ -1390,12 +1394,16 @@ config("compiler_deterministic") {
         ldflags += [ "/PDBSourcePath:o:\fake\prefix" ]
       }
     }
+    #[ee] ee_inject_custom_clang: set libc++, disable warnings, add lib c++ for tests (last one not tested)
+    cflags += [ "-stdlib=libc++", "-w" ]
+    ldflags += [ "-stdlib=libc++", "-lc++" ]
   }

   # Tells the compiler not to use absolute paths when passing the default
   # paths to the tools it invokes. We don't want this because we don't
   # really need it and it can mess up the goma cache entries.
-  if (is_clang && (!is_nacl || is_nacl_saigo)) {
+  #[ee] ee_inject_custom_clang: remove gcc flags
+  if (!is_linux && is_clang && (!is_nacl || is_nacl_saigo)) {
     cflags += [ "-no-canonical-prefixes" ]

     # Same for links: Let the compiler driver invoke the linker